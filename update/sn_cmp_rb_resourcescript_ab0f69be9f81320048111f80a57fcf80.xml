<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Delete_Resource</name>
        <resource display_value="Azure Datacenter">ddf5cd6bd722220097eb6ccf6e610346</resource>
        <script>function processResponse(response, cloudServiceAccountId, ldc, &#13;
						  correlationId, step, requestorContext, stackId) {&#13;
	&#13;
	var rps = new sn_cmp_api.ResponseProcessorScript();&#13;
	var responseToProcess = rps.extractResponse(response);&#13;
	var responseObject = global.JSON.parse(responseToProcess);&#13;
	&#13;
	var responseProcessor = new sn_cmp.ResponseProcessor(cloudServiceAccountId, &#13;
												  null,&#13;
												  'Azure API');&#13;
	&#13;
	// Look up validator for type&#13;
	var validator = 'cloud_resource_create_validator';&#13;
	var gr = new GlideRecord('sn_capi_resource_type');&#13;
	if (gr.get('name', responseObject.type)) {&#13;
		var validatorGr = new GlideRecord('cmdb_cmp_cloud_model_validator');&#13;
		if (validatorGr.get('ci_class', '' + gr.ci_class))&#13;
			validator = '' + validatorGr.validator_name;&#13;
	}&#13;
	&#13;
	var table = getTableForType(responseObject.type);&#13;
	var type = responseObject.type;&#13;
	if (type.toLowerCase() == 'microsoft.compute/disks') {&#13;
		//special handling for disks&#13;
		type = "Microsoft.Storage/blobs";&#13;
		responseProcessor = new sn_cmp.ResponseProcessor(cloudServiceAccountId, &#13;
												  responseObject.successfullyDeleted[0].location,&#13;
												  'Azure API');&#13;
	} else&#13;
		type = gs.nil(table) ? 'Cloud Resource' : responseObject.type;&#13;
	&#13;
	var cloudModelObject = &#13;
		responseProcessor.processResponseArray(responseObject.successfullyDeleted,&#13;
											   type,&#13;
											   validator);&#13;
	&#13;
	return global.JSON.stringify(cloudModelObject);&#13;
}&#13;
&#13;
function getTableForType(type) {&#13;
	var table = '';&#13;
	var gr = new GlideRecord('sn_capi_resource_type');&#13;
	if (gr.get('name', type))&#13;
		table = '' + gr.ci_class;&#13;
		&#13;
	return table;&#13;
}</script>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId, ldc, 
						  correlationId, step, requestorContext, stackId) {
	
	var rps = new sn_cmp_api.ResponseProcessorScript();
	var responseToProcess = rps.extractResponse(response);
	var responseObject = global.JSON.parse(responseToProcess);
	
	var responseProcessor = new sn_cmp.ResponseProcessor(cloudServiceAccountId, 
												  null,
												  'Azure API');
	
	// Look up validator for type
	var validator = 'cloud_resource_create_validator';
	var gr = new GlideRecord('sn_capi_resource_type');
	if (gr.get('name', responseObject.type)) {
		var validatorGr = new GlideRecord('cmdb_cmp_cloud_model_validator');
		if (validatorGr.get('ci_class', '' + gr.ci_class))
			validator = '' + validatorGr.validator_name;
	}
	
	var table = getTableForType(responseObject.type);
	var type = responseObject.type;
	if (type.toLowerCase() == 'microsoft.compute/disks') {
		//special handling for disks
		type = "Microsoft.Storage/blobs";
		responseProcessor = new sn_cmp.ResponseProcessor(cloudServiceAccountId, 
												  responseObject.successfullyDeleted[0].location,
												  'Azure API');
	} else
		type = gs.nil(table) ? 'Cloud Resource' : responseObject.type;
	
	
	if (type.toLowerCase() == 'microsoft.compute/availabilitysets') {
		//special handling for availability sets
		for (var i = 0; i < responseObject.successfullyDeleted.length; i++) {
			var as = responseObject.successfullyDeleted[i];
			if (as.properties)
				as.properties.provisioningState = 'terminated';
		}
	}
	var cloudModelObject = 
		responseProcessor.processResponseArray(responseObject.successfullyDeleted,
											   type,
											   validator);
	
	return global.JSON.stringify(cloudModelObject);
}

function getTableForType(type) {
	var table = '';
	var gr = new GlideRecord('sn_capi_resource_type');
	if (gr.get('name', type))
		table = '' + gr.ci_class;
		
	return table;
}]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>jimmy.yuan</sys_created_by>
        <sys_created_on>2017-02-23 20:13:58</sys_created_on>
        <sys_id>ab0f69be9f81320048111f80a57fcf80</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Delete_Resource</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_ab0f69be9f81320048111f80a57fcf80</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-12 19:21:39</sys_updated_on>
        <type>7</type>
    </sn_cmp_rb_resourcescript>
</record_update>
