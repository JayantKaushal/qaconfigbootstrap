<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>sn_cmp.CMPGetDiscoveryJobsAction</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>CMPGetDiscoveryJobsAction</name>
        <script><![CDATA[var CMPGetDiscoveryJobsAction = Class.create();
CMPGetDiscoveryJobsAction.prototype = Object.extendsObject(sn_smd.SMBaseAction, {
    doAction: function(params) {
		try {



			var cloudAccountId= params.cloudAccountId;
			var discoveryJobsList = [];
			var discoveryJobs ={};
		var discoStatus = new GlideRecord("discovery_status");
		var discoScheduleRecord = new GlideRecord("discovery_schedule");

			this.queryActiveAndStartingDiscoStatus(cloudAccountId, discoStatus);
			while (discoStatus.next()) {
				discoveryJobsList.push(this.setDiscoStatusDTO(discoStatus, discoScheduleRecord));
			}
			discoStatus.initialize();
			this.queryCompletedDiscoStatus(cloudAccountId, discoStatus);
			while (discoStatus.next()) {
				discoveryJobsList.push(this.setDiscoStatusDTO(discoStatus, discoScheduleRecord));
			}

			//var discoveryJobsListObj = new global.JSON().decode(discoveryJobsList);
			return discoveryJobsList;

		} catch (error) {
			var e = error;
			throw sn_smd.SMErrorHelper.createScriptAPIError(
			gs.getMessage("Failed to get discoveryJobs action"),
			"CMPGetDiscoveryJobsAction.doAction(): Failed to get discoveryJobs",
			error
			);
		}
    },

	 queryActiveAndStartingDiscoStatus : function(cloudAccountId, discoStatus) {

		 var condition = discoStatus.addJoinQuery("discovery_schedule",
				"dscheduler", "sys_id");
		condition.addCondition("ci_id", cloudAccountId);
		discoStatus.addQuery("state", "IN", "Active" + ","
				+ "Starting");
		discoStatus.query();
	},
	 setDiscoStatusDTO: function(discoStatus, discoScheduleRecord) {
		var discoScheduler;
		var dto = {};
		dto['statusId']=discoStatus.getUniqueValue();
		dto['statusNumber']=discoStatus.getValue("number");
		discoScheduler = discoStatus.getValue("dscheduler");
		dto['discoSchedulerId'] = discoScheduler;
		if (!gs.nil(discoScheduler)) {
			discoScheduleRecord.get(discoScheduler);
			dto['discoSchedulerName']=discoScheduleRecord.getValue("name");
		}
		dto['state']=discoStatus.getValue("state");
		return dto;
	},

	 queryCompletedDiscoStatus: function(cloudAccountId, discoStatus) {

		var condition = discoStatus.addJoinQuery("discovery_schedule",
				"dscheduler", "sys_id");
		condition.addCondition("ci_id", cloudAccountId);
		discoStatus.addQuery("state", "Completed");
		discoStatus.orderByDesc("number");
		discoStatus.setLimit(5);
		discoStatus.query();
	},

    type: 'CMPGetDiscoveryJobsAction'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-01-29 07:13:56</sys_created_on>
        <sys_id>e15c46a20b2032003bace58525673a3f</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>CMPGetDiscoveryJobsAction</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_include_e15c46a20b2032003bace58525673a3f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-04-04 11:43:38</sys_updated_on>
    </sys_script_include>
</record_update>
