<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Azure_Create_Storage_Volume_Response_Processor</name>
        <resource display_value="Azure Datacenter">ddf5cd6bd722220097eb6ccf6e610346</resource>
        <script>function processResponse(response, cloudServiceAccountId, ldc, correlationId,step, requestorContext) {&#13;
	var cloudModelString = [];&#13;
	var volumeResponse = global.JSON.parse(response);&#13;
	var reqContext = global.JSON.parse(requestorContext);&#13;
	var volume = {&#13;
		"cmdb_ci_storage_volume": {&#13;
			"validator": "default_storage_volume_validator",&#13;
			"validator_overrides": { },&#13;
			"identification": {&#13;
				"cmdb_ci_cloud_service_account": {&#13;
					"criterion": {&#13;
						"object_id": cloudServiceAccountId&#13;
					}&#13;
				},&#13;
				"cmdb_ci_azure_datacenter": {&#13;
					"criterion": {&#13;
						"object_id": ldc&#13;
					}&#13;
				},&#13;
				"cmdb_ci_storage_volume": {&#13;
					"criterion": {&#13;
						"object_id": volumeResponse.id&#13;
					}&#13;
				}&#13;
			},&#13;
			"attributes": {&#13;
				"object_id": volumeResponse.id,&#13;
				"volume_id": volumeResponse.id,&#13;
				"name": volumeResponse.name,&#13;
				"total_size_gb":volumeResponse.properties.diskSizeGB,&#13;
				"size_bytes":volumeResponse.properties.diskSizeGB*1024*1024*1024,&#13;
				"storage_type":"Block",&#13;
				"state":"available",&#13;
				"volume_type":volumeResponse.accountType,&#13;
				"assigned_to":reqContext.userId,&#13;
				"assignment_group":reqContext.groupId&#13;
			},&#13;
			"references": {&#13;
				"cmdb_ci_resource_group": {&#13;
					"identification": {&#13;
						"cmdb_ci_cloud_service_account": {&#13;
							"criterion": {&#13;
								"object_id": cloudServiceAccountId&#13;
							}&#13;
						},&#13;
						"cmdb_ci_azure_datacenter": {&#13;
							"criterion": {&#13;
								"object_id": ldc&#13;
							}&#13;
						},&#13;
						"cmdb_ci_resource_group": {&#13;
							"criterion": {&#13;
								"object_id": volumeResponse.resourceGroup&#13;
							}&#13;
						}&#13;
					},&#13;
					"attributes": {&#13;
						"object_id": volumeResponse.resourceGroup&#13;
					}&#13;
				}&#13;
			}&#13;
		}&#13;
	};&#13;
	&#13;
	// Include tagValues if there are any&#13;
	if (!gs.nil(volumeResponse.tags))&#13;
		volume.cmdb_ci_storage_volume.tagValues= global.JSON.stringify(volumeResponse.tags);&#13;
&#13;
	cloudModelString.push(volume);&#13;
	return global.JSON.stringify(cloudModelString);&#13;
}</script>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId, ldc, correlationId,step, requestorContext) {
	var cloudModelString = [];
	var volumeResponse = global.JSON.parse(response);
	var reqContext = global.JSON.parse(requestorContext);
	var volume = {
		"cmdb_ci_storage_volume": {
			"validator": "default_storage_volume_validator",
			"validator_overrides": { },
			"identification": {
				"cmdb_ci_cloud_service_account": {
					"criterion": {
						"object_id": cloudServiceAccountId
					}
				},
				"cmdb_ci_azure_datacenter": {
					"criterion": {
						"object_id": ldc
					}
				},
				"cmdb_ci_storage_volume": {
					"criterion": {
						"object_id": volumeResponse.id
					}
				}
			},
			"attributes": {
				"object_id": volumeResponse.id,
				"volume_id": volumeResponse.id,
				"name": volumeResponse.name,
				"total_size_gb":volumeResponse.properties.diskSizeGB,
				"size_bytes":volumeResponse.properties.diskSizeGB*1024*1024*1024,
				"storage_type":"Block",
				"state":"available",
				"volume_type":volumeResponse.accountType,
				"assigned_to":reqContext.userId,
				"assignment_group":reqContext.groupId
			},
			"references": {
				"cmdb_ci_resource_group": {
					"identification": {
						"cmdb_ci_cloud_service_account": {
							"criterion": {
								"object_id": cloudServiceAccountId
							}
						},
						"cmdb_ci_azure_datacenter": {
							"criterion": {
								"object_id": ldc
							}
						},
						"cmdb_ci_resource_group": {
							"criterion": {
								"object_id": volumeResponse.resourceGroup
							}
						}
					},
					"attributes": {
						"object_id": volumeResponse.resourceGroup
					}
				}
			}
		}
	};
	
	if (!gs.nil(volumeResponse.tags))
		volume['cmdb_ci_storage_volume'].tagValues= global.JSON.stringify(volumeResponse.tags);

	cloudModelString.push(volume);
	return global.JSON.stringify(cloudModelString);
}]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>system</sys_created_by>
        <sys_created_on>2018-02-26 07:10:08</sys_created_on>
        <sys_id>4ef501abd722220097eb6ccf6e6103d1</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Azure_Create_Storage_Volume_Response_Processor</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_4ef501abd722220097eb6ccf6e6103d1</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-26 13:26:24</sys_updated_on>
        <type>7</type>
    </sn_cmp_rb_resourcescript>
</record_update>
