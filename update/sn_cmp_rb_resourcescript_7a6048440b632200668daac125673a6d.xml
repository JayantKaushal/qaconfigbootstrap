<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Create_Storage_Volume_Response_Processor</name>
        <resource display_value="AWS Datacenter">0279b35e0be622009e620bcb15673a2e</resource>
        <script/>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId, ldc, correlationId,step, requestorContext) {
	var cloudModelString = [];
	var volumeResponse = global.JSON.parse(response);
	var reqContext = global.JSON.parse(requestorContext);
	var volume = {
		"cmdb_ci_storage_volume": {
			"validator": "default_storage_volume_validator",
			"validator_overrides": { },
				"identification": {
					"cmdb_ci_cloud_service_account": {
						"criterion": {
							"object_id": cloudServiceAccountId
						}
					},
					"cmdb_ci_aws_datacenter": {
						"criterion": {
							"object_id": ldc
						}
					},
					"cmdb_ci_storage_volume": {
						"criterion": {
							"object_id": volumeResponse.volumeId
						}
					}
				},
				"attributes": {
					"object_id": volumeResponse.volumeId,
					"volume_id": volumeResponse.volumeId,
					"name": volumeResponse.volumeName,
					"total_size_gb":volumeResponse.size,
					"size_bytes":volumeResponse.size*1024*1024*1024,
					"storage_type":"Block",
					"state":volumeResponse.state,
					"volume_type":volumeResponse.volumeAccessType,
					"assigned_to":reqContext.userId,
					"assignment_group":reqContext.groupId
				},
				"references" : {}
			}
		};

		if(volumeResponse.availabilityZone.length>0){
			var zoneMap = {
				"identification": {
					"cmdb_ci_cloud_service_account": {
						"criterion": {
							"object_id": cloudServiceAccountId
						}
					},
					"cmdb_ci_aws_datacenter": {
						"criterion": {
							"object_id": ldc
						}
					},
					"cmdb_ci_availability_zone": {
						"criterion": {
							"object_id": volumeResponse.availabilityZone
						}
					}
				},
				"attributes": {
					"object_id": volumeResponse.availabilityZone
				}
			};
			volume.cmdb_ci_storage_volume.references['cmdb_ci_availability_zone'] = zoneMap;
		}
		
		if (!gs.nil(volumeResponse.tags))
			volume["cmdb_ci_storage_volume"].tagValues = global.JSON.stringify(volumeResponse.tags);
		
		cloudModelString.push(volume);
		return global.JSON.stringify(cloudModelString);
	}]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-12-02 09:33:07</sys_created_on>
        <sys_id>7a6048440b632200668daac125673a6d</sys_id>
        <sys_mod_count>13</sys_mod_count>
        <sys_name>Create_Storage_Volume_Response_Processor</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_7a6048440b632200668daac125673a6d</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-20 07:48:14</sys_updated_on>
        <type>7</type>
    </sn_cmp_rb_resourcescript>
</record_update>
