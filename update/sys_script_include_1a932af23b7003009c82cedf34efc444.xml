<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>sn_cmp.CMPRbCreateInterfaceExtentionAction</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>CMPRbCreateInterfaceExtentionAction</name>
        <script><![CDATA[var CMPRbCreateInterfaceExtentionAction = Class.create();
CMPRbCreateInterfaceExtentionAction.prototype = Object.extendsObject(sn_smd.SMBaseAction, {
     doAction: function(params) {
		try{
			if (!params.baseInterfaceName) {
				throw sn_smd.SMErrorHelper.createScriptAPIError(
					gs.getMessage("Illegal parameter"),
					"CMPRbCreateInterfaceExtentionAction.doAction: Undefined base interface name",
					null
				);
			}
			var createInterfaceExt;
			//Guest Interface operation list
			if(params.isCreateNewInterfaceExt == 'true') {
				//Create New Interface
				var getInterfaceExtId = new CMPInterfaceExtension().createExtension(params.extInterfaceName, params.resourceblockName, params.baseInterfaceId);
				
				if(getInterfaceExtId != null){
					//Override the operation
					var getOperationOverrideInfo = new CMPInterfaceExtension().overrideOperation(params.resourceblockName, params.operationName,  params.baseInterfaceId, getInterfaceExtId);
					return { id: getInterfaceExtId};
				}
				else{
					throw sn_smd.SMErrorHelper.createScriptAPIError(
						gs.getMessage("Failed to override operation. Extended interface with name {0} already exists.",params.extInterfaceName),
						"CMPRbCreateInterfaceExtentionAction.doAction(): Failed to override operation. Extended interface with name '"+params.extInterfaceName+"' already exists.",null);
				}
					
			} else {
				createInterfaceExt = new CMPInterfaceExtension().overrideOperation(params.resourceblockName, params.operationName,  params.baseInterfaceId, params.extInterfaceId);
				return { id: params.extInterfaceId};
				
			}
			
			
		} catch (error) {
			var e = error;
			throw sn_smd.SMErrorHelper.createScriptAPIError(
				gs.getMessage("Failed to insert interface extention"),
				"CMPRbCreateInterfaceExtentionAction.doAction(): Failed to insert interface extention",
				error
			);
		}
    },
    type: 'CMPRbCreateInterfaceExtentionAction'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-08-29 10:04:18</sys_created_on>
        <sys_id>1a932af23b7003009c82cedf34efc444</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>CMPRbCreateInterfaceExtentionAction</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_include_1a932af23b7003009c82cedf34efc444</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-09 10:31:00</sys_updated_on>
    </sys_script_include>
</record_update>
