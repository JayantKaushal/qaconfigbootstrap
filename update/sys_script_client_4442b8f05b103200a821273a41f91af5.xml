<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script_client">
    <sys_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_extended>false</applies_extended>
        <condition/>
        <description/>
        <field>action_type</field>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>Action_Action_Type_On_Change</name>
        <order/>
        <script><![CDATA[var BLUEPRINT_PROVISION = "2";
var BLUEPRINT_APPROVAL = "4";
var CATALOG_ITEM_LAUNCH = "6";
var CATALOG_ITEM_REQUEST_START = "8";
var CATALOG_ITEM_REQUEST_END = "9";
var CLOUD_EVENT = "7";
var RESOURCE_OPERATION = "3";
var STACK_APPROVAL = "5";
var STACK_RESOURCE_OPERATION_APPROVAL = "10";
var LEASE_END = "12";
var ON_TASK_CLEANUP = "13"; 

var PROPERTY_OVERRIDE = 1;
var SERVICE_NOW_APPROVAL = 2;
var EXECUTE_SCRIPT = 3;
var EXECUTE_WORKFLOW = 4;
var CLOUD_API = 5;
var ABORT_PROCESS = 6;
var CUSTOM_APPROVAL = 7;
var IPAM = 11;
var RUN_OPERATION = 12;
var NOTIFY = 13;

function onChange(control, oldValue, newValue, isLoading, isTemplate) {
	if (isLoading || newValue === '') {
		return;
	}
	
	g_form.setDisplay( "policy_rule", false);
	var ruleId = g_form.getValue( "policy_rule");
	setParentAttributes();
	hideFields();
	displayMandatoryFields();
	var actionType = 0;
	try{
		actionType = parseInt(newValue);
	}catch(err){
		
	}
	switch( actionType){
		case PROPERTY_OVERRIDE:
		renderProperty( ruleId);
		break;
		case SERVICE_NOW_APPROVAL:
		renderApproval( ruleId);
		break;
		case EXECUTE_SCRIPT:
		renderScript( ruleId);
		break;
		case EXECUTE_WORKFLOW:	
		renderWorkflow( ruleId);
		break;
		case CLOUD_API:
		renderCloudAPI( ruleId);
		break;	
		case ABORT_PROCESS:
		renderAbort(ruleId);
		break;
		case CUSTOM_APPROVAL:
		renderWorkflow( ruleId);
		break;
		case IPAM:
		renderIPAM(ruleId);	
		break;	
		case RUN_OPERATION:
		renderOperation( ruleId);
		break;
		case NOTIFY:
		renderNotify( ruleId);
		break;
		default:
	}
}

function renderIPAM(ruleId){
	g_form.setDisplay("ipam_method_name", true);
	g_form.setDisabled("ipam_method_name", false);
	g_form.setMandatory("ipam_method_name", true);
	g_form.setMandatory( "ipam_provider_type", true);	
	g_form.setDisplay( "ipam_provider_type", true);		
	populateActionName();
	if(g_form.getValue("policy_rule.policy.moment").toLowerCase() == 'pre'){
		populatePropertyDefaultValue();		
		displayPropertyField( ruleId);
		g_form.removeOption( "ipam_method_name", "3");
		g_form.removeOption( "ipam_method_name", "2");
	}else{
		g_form.removeOption( "ipam_method_name", "1");
	}
	if(!g_form.isNewRecord()){
		g_form.showRelatedLists();
	}
}

function renderOperation(ruleId){
	g_form.setDisplay( "bp_operation", true);
	g_form.setMandatory( "bp_operation", true);	
}

function renderNotify(ruleId){
	g_form.setDisplay( "notification", true);
	g_form.setMandatory( "notification", true);	
}

function populatePropertyDefaultValue(){
	g_form.setValue("property", "IPAddress");
	g_form.setValue("property_name","IPAddress");
}

function populateActionName(){
	g_form.setDisplay("name", false);
	g_form.setMandatory("name", false);
	if( g_form.getValue( "name") == ""){
		var ipamName = "reserveIP";
		if( g_form.getValue( "ipam_method_name") == "2"){
			ipamName = "releaseIP";
		}else if( g_form.getValue( "ipam_method_name") == "3"){
			ipamName = "registerIP";
		}
		
		ipamName += g_form.getValue( "action_order");
		g_form.setValue( "name", ipamName);
	} 	
}

function renderCloudAPI( ruleId){
	g_form.setDisplay( "provider", true);
	g_form.setDisplay( "credentials", true);	
	g_form.setDisplay( "version", true);
	g_form.setDisplay( "endpoint_url", true);
	g_form.setDisplay( "interface_id", true);
	g_form.setDisplay( "method", true);
	g_form.setDisplay( "name", true);
	g_form.setMandatory( "name", true);
	g_form.setMandatory( "provider", true);
	g_form.setMandatory( "version", true);
	g_form.setMandatory( "credentials", true);
	g_form.setMandatory( "interface_id", true);
	g_form.setMandatory( "method", true);	
	if(!g_form.isNewRecord() && g_form.getValue("method") != ""){
		g_form.showRelatedLists();	
	}
}

function hideFields(){
	g_form.setMandatory( "workflow", false);
	g_form.setMandatory( "name", false);
	g_form.setMandatory( "workflow", false);	
	g_form.setMandatory( "provider", false);
	g_form.setMandatory( "version", false);
	g_form.setMandatory( "credentials", false);
	g_form.setMandatory( "interface_id", false);
	g_form.setMandatory( "method", false);		
	g_form.setMandatory("ipam_method_name", false);
	g_form.setMandatory( "group_id", false);
	g_form.setMandatory( "property", false);
	g_form.setMandatory( "property_name", false);
	g_form.setMandatory( "ipam_provider_type", false);	
	g_form.setMandatory( "bp_operation", false);	
	g_form.setMandatory( "notification", false);	
	g_form.setDisplay( "bp_operation", false);
	g_form.setDisplay( "notification", false);
	g_form.setDisplay( "property_name", false);
	g_form.setDisplay( "property", false);
	g_form.setDisplay( "value", false);
	g_form.setDisplay( "action_type", false);
	g_form.setDisplay( "namespace", false);
	g_form.setDisplay( "is_approval_active", false);
	g_form.setDisplay( "is_user_approval", false);
	g_form.setDisplay( "is_manager_approval", false);
	g_form.setDisplay( "is_group_approval", false);
	g_form.setDisplay( "user_id", false);		
	g_form.setDisplay( "group_id", false);
	g_form.setDisplay( "comments", false);
	g_form.setDisplay( "action_order", false);
	g_form.setDisplay( "workflow", false);
	g_form.setLabelOf( "comments", getMessage("Description"));	
	g_form.setDisplay( "is_script", false);	
	g_form.setDisplay( "script", false);
	g_form.setDisplay( "name", false);
	g_form.setDisplay( "action_script_name", false);
	g_form.hideRelatedLists();
	g_form.setDisplay( "provider", false);
	g_form.setDisplay( "credentials", false);	
	g_form.setDisplay( "version", false);
	g_form.setDisplay( "endpoint_url", false);
	g_form.setDisplay( "interface_id", false);
	g_form.setDisplay( "method", false);
	g_form.setDisplay( "action_script_cat", false);
	g_form.setDisplay( "ipam_provider_type", false);			
	g_form.setDisplay("ipam_method_name", false);
	g_form.setDisabled("ipam_method_name", true);
}

function fetchOperationParameters( ruleId){
	var selectedPropertyValue = g_form.getValue("property");
	var ajax = new GlideAjax("PolicyOperationsUtil");
	ajax.addParam("sysparm_name", "fetchOperationParameters");
	ajax.addParam("ruleId", ruleId);
	ajax.getXML(function(serverResponse) {
		g_form.clearOptions( "property_name");
		var optionsObj = JSON.parse(serverResponse.responseXML.getElementsByTagName("xml")[0].getAttribute("answer"));
		if (typeof optionsObj != "undefined") {
			console.info("optionsObj = " + optionsObj);
			for (var i = 0; i < optionsObj.length; i++) {
				g_form.addOption("property_name", optionsObj[i].name, optionsObj[i].name);
			}
			if( selectedPropertyValue != ""){
				g_form.setValue( "property_name",selectedPropertyValue);
			}
		}
	});
}

function displayPropertyField( ruleId){
	var displayTextbox = false;
	var targetEntityInstanceId = g_form.getValue("policy_rule.policy.target_entity_instance_id");
	if(g_form.getValue("policy_rule.policy.target_entity_id") == CATALOG_ITEM_LAUNCH && g_form.getValue("policy_rule.policy.target_entity_instance_id") == ""){
		displayTextbox = true;
	} else if(g_form.getValue("policy_rule.policy.target_entity_id") != CATALOG_ITEM_LAUNCH && g_form.getValue("policy_rule.policy.operation_id") == ""){
		displayTextbox = true;
	}
	if( displayTextbox){
		g_form.setDisplay( "property", true);
		g_form.setMandatory( "property", true);
	}else{
		fetchOperationParameters( ruleId);
		g_form.setDisplay( "property_name", true);
		g_form.setMandatory( "property_name", true);
	}	
}

function renderProperty( ruleId){
	displayPropertyField( ruleId);
	g_form.setDisplay("is_script", true);
	if(g_form.getValue("is_script")  == "true"){
		g_form.setMandatory( "value", false);
		g_form.setDisplay( "value", false);
		g_form.setDisplay( "script", true);
		g_form.setDisplay( "action_script_cat",true);
		g_form.setDisplay( "action_script_name",true);
	}else{
		g_form.setDisplay( "value", true);
		g_form.setDisplay( "script", false);
		g_form.setDisplay( "action_script_cat", false);
		g_form.setDisplay( "action_script_name", false);
	}
}

function renderApproval(){
	g_form.setDisplay( "property", false);
	g_form.setDisplay( "is_manager_approval", true);
	g_form.setDisplay( "is_group_approval", false);
	g_form.setDisplay( "is_user_approval", false);
	g_form.setDisplay( "user_id", true);
	g_form.setDisplay( "value", false);
	g_form.setDisplay( "property_name", false);
	g_form.setDisplay( "comments", false);
	g_form.setDisplay( "group_id", true);
	g_form.setMandatory( "group_id", false);
	g_form.setValue( "is_group_approval", true);
	g_form.setDisplay( "is_active", false);
	renderStackApproval();
}

function renderStackApproval(){
	var targetEntityId = g_form.getValue("policy_rule.policy.target_entity_id");
	if( targetEntityId == STACK_RESOURCE_OPERATION_APPROVAL || targetEntityId == STACK_APPROVAL){
		g_form.setDisplay( "user_id", false);
		g_form.setDisplay( "is_manager_approval", false);		
		g_form.setMandatory( "group_id", true);
	}
}

function isUserApprovalAttrRequired(){
	var targetEntityInstanceId = g_form.getValue("policy_rule.policy.target_entity_instance_id");
	var operationId = g_form.getValue("policy_rule.policy.operation_id");	
	var ajax = new GlideAjax("PolicyOperationsUtil");	
	ajax.addParam("sysparm_name", "isUserApprovalAttrRequired");
	ajax.addParam("targetEntityInstanceId", targetEntityInstanceId);
	ajax.addParam("operationId", operationId);
	console.info("targetEntityInstanceId = " + targetEntityInstanceId + " operationId=  " + operationId);
	ajax.getXML(
		function(serverResponse) {
			var isApprovalRequired = JSON.parse(serverResponse.responseXML.getElementsByTagName("xml")[0].getAttribute("answer"));
			if( isApprovalRequired.required){
				g_form.setDisplay( "is_manager_approval", true);
				g_form.setDisplay( "user_id", true);				
			}else{
				g_form.setDisplay( "is_manager_approval", false);
				g_form.setDisplay( "user_id", false);								
			}
	});		
}


function renderWorkflow( ruleId){
	g_form.setDisplay( "workflow", true);
	g_form.setDisabled( "workflow", false);
	g_form.setMandatory( "workflow", true);
}

function renderAbort( ruleId){
	g_form.setDisplay( "comments", true);
	g_form.setLabelOf( "comments", getMessage("Message"));	
}


function renderScript( ruleId){
    g_form.setDisplay( "action_script_cat", true);
	g_form.setDisplay( "script", true);
	g_form.setDisplay( "action_script_name", true);	
}

function displayPropertyActionFields(){
	g_form.setDisplay( "value", true);
	g_form.setDisplay( "property_name", true);
}

function displayMandatoryFields(){
	g_form.setDisplay( "action_type", true);
	g_form.setDisplay( "action_order", true);	
}
function setParentAttributes(){
	g_form.setDisplay( "policy_rule", true);
	g_form.setDisplay( "policy_rule.policy.target_entity_instance_id", false);
	g_form.setDisplay( "policy_rule.policy.operation_id", false);
	g_form.setDisplay( "policy_rule.policy.status", false);
	g_form.setDisplay( "policy_rule.policy.target_entity_id", false);
	g_form.setDisplay( "policy_rule.policy.moment", false);
}]]></script>
        <sys_class_name>sys_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-01-11 03:55:12</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>4442b8f05b103200a821273a41f91af5</sys_id>
        <sys_mod_count>128</sys_mod_count>
        <sys_name>Action_Action_Type_On_Change</sys_name>
        <sys_overrides/>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_client_4442b8f05b103200a821273a41f91af5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-08-07 19:26:44</sys_updated_on>
        <table>sn_cmp_pol_action</table>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <view/>
    </sys_script_client>
</record_update>
