<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category/>
        <client_script><![CDATA[function ($location,$scope,$rootScope,spUtil,$timeout,spModal) {
	var c = this;

	//Removing the operations based on the resource type and resource state
	angular.forEach(c.data.operations, function(val, key) {
		if(val.resourceBlock == "Virtual Server" && c.data.resource[0].state == "On" && val.operation == "Start" ){
			c.data.operations.splice(0, 1);
		}else if(val.resourceBlock == "Virtual Server" && c.data.resource[0].state == "Off" && val.operation == "Stop" ){
			c.data.operations.splice(2, 1);
		}
	});

	var searchParams = $location.search();
	// Breadcrumbs
	var bc = [{label: "${Cloud Resources}", url: '?id=cloud_resources&category=cloud_resources'}];
	if(searchParams.resource_table){
		bc[bc.length] = {label: c.data.label , url: '?id=cloud_resources&category=cloud_resources&table='+searchParams.resource_table};
		bc[bc.length] = {label: c.data.resource[0].name, url: '#'};		
		$rootScope.$broadcast('sp.update.breadcrumbs', bc);
		spUtil.setSearchPage('sc');
	}

	spUtil.recordWatch($scope, searchParams.resource_table,"",function(name,data){
		//spUtil.update($scope);
		c.server.update();
	});
	
	spUtil.recordWatch($scope, 'sc_req_item',"",function(name,data){
		c.server.update();
	});
	
	var failedState = ['Terminated'];
	var inProgressState = ['Off', 'In Use', 'Detached'];
	var completedState = ['On', 'Available', 'Attached',];
	
	c.getStateClass = function(state) {
		if(failedState.indexOf(state) >= 0)
			return 'failed';
		
		else if(inProgressState.indexOf(state) >= 0)
			return 'in-progress';
		
		else if(completedState.indexOf(state) >= 0)
			return 'complete';
	};

	c.showCatItem = function(operationName,operationId,resourceBlock,resourceInterface) {
		c.data.operation_id = operationId;
		c.data.resource_block = resourceBlock;
		c.server.update().then(function() {
			spModal.open({
				title: operationName,
				size: 'lg',
				widget: 'cloud-resource-operation-modal',
				widgetInput: {sys_id:c.data.catItemSysId,resourceId: c.data.resource_id, operationName: operationName,resourceBlock: resourceBlock,resourceInterface: resourceInterface }
			}).then(function(){
				c.data.operation = '';
				$rootScope.$broadcast("$sp.resource.operation_cat_item.submit");
			},function() {
				c.data.operation = '';
			});  
		});
	};	
	$scope.$on('$sp.cloud.resource.operation.cat.item.submitted', function(e, request_id){
		$location.search('request_id', request_id);
	});

}

]]></client_script>
        <controller_as>c</controller_as>
        <css>.operation_dropdown {&#13;
  width: auto; &#13;
  display: inline-block;&#13;
}&#13;
&#13;
.operation-status {&#13;
  display: inline-block;&#13;
  margin-right: 10px;&#13;
  margin-top: 15px;&#13;
  color: #FFA500;&#13;
}&#13;
&#13;
.operations-div {&#13;
  float: right;&#13;
}&#13;
&#13;
.resource-header {&#13;
  background-color: rgba(250, 250, 250, 1);&#13;
  width: 100%;&#13;
  border-bottom: 1px solid #ddd;&#13;
  padding: 8px 10px;&#13;
  font-size: 14px;&#13;
  margin-bottom: 10px;&#13;
}&#13;
&#13;
.resource-title {&#13;
  float: left;&#13;
}&#13;
&#13;
.resource-title h1 {&#13;
  display: inline-block;&#13;
  margin: 0 10px 0 0;&#13;
  line-height: 32px;&#13;
  font-size: 24px;&#13;
}&#13;
&#13;
.resource-title .resource-state {&#13;
  margin: -8px 15px 0 0;&#13;
  display: inline-block;&#13;
  padding: 2px 5px;&#13;
  background: #bdc0c4;&#13;
  color: #fff;&#13;
  border-radius: 3px;&#13;
  vertical-align: middle;&#13;
  font-size: 12px;&#13;
  min-width: 36px;&#13;
  text-align: center;&#13;
}&#13;
&#13;
.resource-title span.complete {&#13;
  background-color: #6CE474; /* green */&#13;
  color: #242424;&#13;
}&#13;
&#13;
.resource-title span.failed {&#13;
  background-color: #FC4E4B; /* red */&#13;
  color: #242424;&#13;
}&#13;
&#13;
.resource-title span.in-progress {&#13;
  background-color: #278EFC; /* blue */&#13;
  color: #242424;&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cloud-resource-details-header</id>
        <internal>false</internal>
        <link/>
        <name>Cloud Resource Details Header</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[// populate the 'data' variable with catalog item, variables, and variable view
(function() {
	data.resource = [];
	data.resource_id = $sp.getParameter('sys_id');
	data.request_id = $sp.getParameter('request_id');
	var table = $sp.getParameter('resource_table');

	if(data.request_id){
		var req_gr = new GlideRecord('sc_req_item');
		req_gr.addQuery('request', data.request_id);
		req_gr.query();
		if(req_gr.next())
			data.req_item_state = req_gr.getValue('state');
	}
	if (input && input.resource_block && input.operation_id) {
		data.catItemSysId = CMPUtil.getResourceOperationCatalogItem(input.resource_block,input.operation_id);
	} else {
		var resourceBlockServiceScript = new sn_cmp_api.ResourceBlockServiceScript();
		var resource_block = new GlideRecord('sn_cmp_rb_resourceblock');
		resource_block.addQuery('refcitype',table);
		resource_block.query();
		if(resource_block.next()){		
			data.operations = global.JSON.parse(resourceBlockServiceScript.getPublicOperationsForResource(resource_block.getValue('sys_id'), data.resource_id));
		}
	}

	var gr = new GlideRecord(table);
	gr.addQuery('sys_id', data.resource_id);
	gr.query();
	while(gr.next()){
		var obj = {
			name: gr.getDisplayValue('name'),
			state: gr.getDisplayValue('state'),
			sys_id: gr.getUniqueValue(),
			sys_created_on: gr.getDisplayValue('sys_created_on'),
			sys_updated_on: gr.getDisplayValue('sys_updated_on')
		}
		data.resource.push(obj);
	}
	data.label = gr.getLabel();
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-12-28 07:50:14</sys_created_on>
        <sys_id>593229900b4c3200eff7ef9bb4673a93</sys_id>
        <sys_mod_count>245</sys_mod_count>
        <sys_name>Cloud Resource Details Header</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sp_widget_593229900b4c3200eff7ef9bb4673a93</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-08-22 23:56:07</sys_updated_on>
        <template><![CDATA[<div class="resource-header clearfix ">
  <div class="resource-title">
    <h1 ng-bind="c.data.resource[0].name"></h1>
    <span class="resource-state" ng-class="c.getStateClass(c.data.resource[0].state)" aria-hidden="true">{{c.data.resource[0].state}}</span>
    <span class="sr-only">${State} {{c.data.resource[0].state}}</span>  
  </div>
    
  <div class="operations-div">
    <span class="operation-status" ng-if="c.data.req_item_state && c.data.req_item_state == 1">${Processing Request...}</span>
    <label for="operation_dropdown" class="sr-only">${Select Resource Operation}</label>
    <select id="operation_dropdown" ng-disabled="c.data.req_item_state && c.data.req_item_state == 1" name="operation_dropdown" ng-model="data.operation" 
            ng-if="data.operations.length > 0 && c.data.resource[0].state != 'Terminated'" class="form-control operation_dropdown"
            ng-options="item as item.operation for item in data.operations track by item.id"
            ng-change="c.showCatItem(data.operation.operation,data.operation.operationId,data.operation.resourceBlock,data.operation.resourceInterface)">
      <option value='' disabled>${Select Resource Operation}</option>
    </select>
  </div>
</div>
]]></template>
    </sp_widget>
</record_update>
