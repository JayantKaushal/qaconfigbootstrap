<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_cmp_bp_rule</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Auto select event for rule</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

    if(gs.nil(current.name)) {
		//Auto selecting the event(FormLoad/FieldChange) while creating a new rule
		var sourceKey = current.source_key;
        var formBehaviorId = current.event.form_behavior;
		var eventId = "";
        if(gs.nil(formBehaviorId))
            formBehaviorId = current.source_key.bp_cat_form_behavior;

        var formLoadEventId = "", fieldChangeEventId="";
        var eventGr= new GlideRecord("sn_cmp_bp_event");
        eventGr.addQuery("form_behavior",formBehaviorId);
        eventGr.query();
       while(eventGr.next()) {
            if(eventGr.type == 'FormLoad')
                formLoadEventId = eventGr.getUniqueValue();
            else if(eventGr.type == 'FieldChange')
                fieldChangeEventId = eventGr.getUniqueValue();
        }
        if(gs.nil(sourceKey)) {
            current.setValue("event",formLoadEventId);
			eventId = formLoadEventId;
		}
        else {
            current.setValue("event",fieldChangeEventId);
			eventId = fieldChangeEventId;
		}
		//Auto generating the order while creating new rule
		var order = generateOrderForRule(eventId,sourceKey);
		if(!gs.nil(order))
			current.setValue("order",order);
		else
			current.setValue("order",10);
    }


	function generateOrderForRule(eventId, sourceKey) {
		if(!gs.nil(eventId)) {
			var ruleGr = new GlideRecord("sn_cmp_bp_rule");
			ruleGr.addQuery("event",eventId);
			if(!gs.nil(sourceKey))
				ruleGr.addQuery("source_key",sourceKey);
			ruleGr.orderByDesc("order");
			ruleGr.query();
			if(ruleGr.next()) {
				return ruleGr.order + 10;
			}
		}
	}



})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-14 07:56:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6599091d0bc30300aee1c97193673a33</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>Auto select event for rule</sys_name>
        <sys_overrides/>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_6599091d0bc30300aee1c97193673a33</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-29 10:13:06</sys_updated_on>
        <template/>
        <when>before_display</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6599091d0bc30300aee1c97193673a33"/>
</record_update>
