<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Create_LB_Response_Processor</name>
        <resource display_value="Load Balancer">85e5010567203200790a6c706785ef4d</resource>
        <script/>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId, ldc, correlationId,step, requestorContext) {
	var json = new global.JSON();
	var cis = [];
	var reqContext = global.JSON.parse(requestorContext);
	var responseObject = json.decode(response);
	responseObject["state"] = "available";
	var responseProcessor = new sn_cmp.ResponseProcessor(cloudServiceAccountId, ldc, 'Cloud API');
	var cloudModelObject = responseProcessor.processResponseObject(responseObject, 'AWS::ElasticLoadBalancingV2::LoadBalancer', 'load_balancer_create_validator');
	cloudModelObject.cmdb_ci_cloud_load_balancer.attributes['assigned_to'] = reqContext.userId;
	cloudModelObject.cmdb_ci_cloud_load_balancer.attributes['assignment_group'] = reqContext.groupId;
	
	if (!gs.nil(responseObject.tagValues)) {
		cloudModelObject["cmdb_ci_cloud_load_balancer"].tagValues = global.JSON.stringify(responseObject.tagValues);
	}
	
	//Availability Zones here is nor a List or Map, It an array of Values seperated by comma so we cannot do with ResponseProcessor Framework right now
	if(responseObject.availabilityZones.length>0){
		cloudModelObject.cmdb_ci_cloud_load_balancer.relationships['cmdb_ci_availability_zone']=[];
		for(var j=0;j<responseObject.availabilityZones.length;j++){
			var availabilityZonesMap = {
				"identification": {
					"cmdb_ci_cloud_service_account": {
						"criterion": {
							"object_id": cloudServiceAccountId
						}
					},
					"cmdb_ci_aws_datacenter": {
						"criterion": {
							"object_id": ldc
						}
					},
					"cmdb_ci_availability_zone": {
						"criterion": {
							"object_id": responseObject.availabilityZones[j]
						}
					}
				},
				"attributes": {
					"object_id": responseObject.availabilityZones[j]
				}
			};	cloudModelObject.cmdb_ci_cloud_load_balancer.relationships.cmdb_ci_availability_zone.push(availabilityZonesMap);
		}
	}
	
	cis.push(cloudModelObject);
	return json.encode(cis);	
}]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-01-24 10:13:22</sys_created_on>
        <sys_id>41e5450567203200790a6c706785efea</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>Create_LB_Response_Processor</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_41e5450567203200790a6c706785efea</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-08-21 23:24:07</sys_updated_on>
        <type>7</type>
    </sn_cmp_rb_resourcescript>
</record_update>
