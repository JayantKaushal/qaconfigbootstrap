<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category/>
        <client_script><![CDATA[function (spModal,$scope, $rootScope, $timeout, spUtil, $location, $window, nowAttachmentHandler,snAttachmentHandler,$compile, cloudEventScope) {

	var c = this;
	$scope.mandatory = [];
	$scope.data.show_sql = false;
	$scope.saveButtonSuffix = spUtil.getAccelerator('s');

	$scope.download = function () {
		c.data.action = "download";
		c.server.update().then(function() {
			c.data.action = '';
			var blob = new Blob([c.data.decrypted_key], {type: 'application/x-pem-file'});
			var fileName =  'Decrypted SSH Key.pem';
			if(window.navigator.msSaveOrOpenBlob) {
				window.navigator.msSaveBlob(blob, fileName);
			}
			else{
				var elem = window.document.createElement('a');
				elem.setAttribute('href', window.URL.createObjectURL(blob));
				elem.setAttribute('target', '_blank');
				elem.setAttribute('download', fileName);

				elem.style.display = 'none';
				window.document.body.appendChild(elem);

				elem.click();

				window.document.body.removeChild(elem);
			}
			c.data.disableUIActions = true;
			c.server.update();
		});
	};



	$scope.deleteRecord = function(){
		spModal.confirm("Are you sure you want to delete this record?").then(function(confirmed) {
			c.data.action = "deleteRecord";
			c.server.update().then(function() {
				c.data.action = '';
				$location.search('table',null);
				$location.search('sys_id',null);
				cloudEventScope.broadcast('cloudActivitiesEvent',{cat:'sn_cmp_ssh_credentials'});
			});
		})
	};

	$scope.cancelOrder = function(){
		c.data.action = "cancelOrder";
		c.server.update().then(function() {
			c.data.action = '';
			spUtil.addInfoMessage("Your order has been cancelled");
		});	
	};

	$scope.askForHelp = function(){
		c.data.action = "askForHelp";
		c.server.update().then(function() {
			c.data.action = '';
			spUtil.addInfoMessage("Task assigned to operator");
		});
	};
	
	$scope.retry = function(){
		c.data.action = "retry";
		c.server.update().then(function() {
			c.data.action = '';
			$location.url("?id=cloud_activities&category=cloud_activities&sys_id="+c.data.ritm+"&selected_card="+c.data.ritm);

		});	
	};



	$scope.adminMenu = {
		encodedPageUrl: encodeURIComponent($location.url()),
		getClientScriptCount: function() {
			var count = 0;
			if ($scope.data.f.client_script) {
				count += $scope.data.f.client_script.onChange.length;
				count += $scope.data.f.client_script.onLoad.length;
				count += $scope.data.f.client_script.onSubmit.length;
			}
			return count;
		}
	};

	$scope.getUIActions = function(type) {
		if ($scope.data.disableUIActions)
			return [];
		if (type) {
			return $scope.data.f._ui_actions.filter(function(action) {
				//We handle the primary action button separately.
				return !action.primary && action['is_' + type];
			});
		} else {
			return $scope.data.f._ui_actions;
		}
	}

	$scope.getPrimaryAction = function() {
		var primaryActions = $scope.data.f._ui_actions.filter(function(action) {
			return action.primary;
		});
		return (primaryActions.length) ? primaryActions[0] : null;
	}

	$scope.getUIActionContextMenu = function(event) {
		var menu = [];
		if (event.ctrlKey)
			return menu;

		var contextActions = $scope.getUIActions('context');
		contextActions.forEach(function(action) {
			menu.push([action.name, function() {
				$scope.triggerUIAction(action);
			}]);
		});

		if (contextActions.length > 0)
			menu.push(null);
		menu.push([$scope.data.exportPDFMsg, function() {exportPDF("");}]);
		menu.push([$scope.data.exportPDFLandMsg, function() {exportPDF('true');}]);

		return menu;
	}

	function exportPDF(landscape) {
		$window.open("/" + $scope.data.f.table + ".do?PDF&landscape=" + landscape + "&sys_id=" + $scope.data.sys_id + "&sysparm_view=" + $scope.data.f.view);
	}

	//trigger the primary UI Action on save (if there is one)
	var deregister = $scope.$on('$sp.save', function() {
		var primaryAction = $scope.getPrimaryAction();
		if (primaryAction)
			$scope.triggerUIAction(primaryAction);
	});
	$scope.$on('$destroy', function() {deregister()});

	$scope.triggerUIAction = function(action) {
		if ($scope.data.disableUIActions)
			return;

		if (g_form) {
			$timeout(function() {
				g_form.submit(action.action_name || action.sys_id);
			});
		}
	}

	$scope.$on("spModel.uiActionComplete", function(evt, response) {
		var sysID = (response.isInsert) ? response.sys_id : $scope.data.sys_id;
		loadForm($scope.data.table, sysID).then(constructResponseHandler(response));
	});

	function constructResponseHandler(response) {
		return function() {
			var message;
			var eventName = "sp.form.record.updated";
			if (response.isInsert) {
				message = $scope.data.recordAddedMsg;
				var search = $location.search();
				search.sys_id = response.sys_id;
				search.spa = 1;
				$location.search(search).replace();
			} else
				message = $scope.data.updatedMsg;

			$scope.data.hideRelatedLists = hideRelatedLists();
			$scope.$emit(eventName, $scope.data.f._fields);
			$rootScope.$broadcast(eventName, $scope.data.f._fields);
			$scope.status = message;
			spUtil.addTrivialMessage(message);
			$timeout(clearStatus, 2000);
		}
	}

	var ctrl = this;
	// switch forms
	var unregister = $scope.$on('$sp.list.click', onListClick);
	$scope.$on("$destroy", function() {
		unregister();
	})

	function onListClick(evt,arg) {
		loadForm(arg.table, arg.sys_id);
	}

	function loadForm(table, sys_id){
		var f = {};
		$scope.data.table = f.table = table;
		$scope.data.sys_id = f.sys_id = sys_id;
		f.view = $scope.data.view;
		return $scope.server.update().then(setupAttachmentHandler);
	}

	function openRelatedList(e, queryString){
		// todo: Open this in a modal
		$location.search(queryString);
		e.preventDefault();
	}

	$scope.$on('spModel.fields.rendered', function() {
		if (ctrl.panels)
			ctrl.panels.removeClass('shift-out').addClass('shift-in');
	});

	var g_form;
	$scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
		if (gFormInstance.getTableName() == $scope.data.f.table)
			g_form = gFormInstance;
	});

	// Show or hide related lists
	$scope.$watch('data.f._related_lists', function(){
		$scope.data.hideRelatedLists = hideRelatedLists();
	}, true);

	function hideRelatedLists() {
		if (!$scope.data.f._related_lists)
			return true;

		if ($scope.options.hideRelatedLists == true)
			return true;

		if ($scope.data.sys_id == '-1')
			return true;

		// If all related lists are visible=false then hide
		if ($scope.data.f._related_lists.length > 0) {
			for (var i in $scope.data.f._related_lists) {
				var list = $scope.data.f._related_lists[i];
				if (list.visible) {
					return false;
				}
			}
		}
		return true;
	}

	function clearStatus() {
		$scope.status = "";
	}

	function setupAttachmentHandler(){
		$scope.attachmentHandler = new nowAttachmentHandler(appendSuccess, appendError);

		$timeout(function() {
			var sizeLimit = 1024 * 1024 * 24; // 24MB
			$scope.attachmentHandler.setParams($scope.data.table, $scope.data.f._attachmentGUID, sizeLimit);
		})
	}
	setupAttachmentHandler();

	function appendSuccess() {
		spUtil.addTrivialMessage($scope.data.attachmentUploadSuccessMsg);
		$scope.$broadcast("sp.attachments.update", $scope.data.f._attachmentGUID);
	}

	function appendError(error) {
		$scope.errorMessages.push(error);
	}

}]]></client_script>
        <controller_as>c</controller_as>
        <css>.panel-title {&#13;
  word-wrap: break-word;&#13;
}&#13;
&#13;
.no-show{&#13;
visibility : hidden;&#13;
}&#13;
.panel-body{&#13;
overflow-y: auto;&#13;
  min-height: 267px;&#13;
}&#13;
.comment {&#13;
	font-weight: bold;&#13;
	margin-top: 2px;&#13;
	margin-bottom: 2px;&#13;
}&#13;
.mce-panel, .mce-btn {&#13;
	background-image: none;&#13;
	background-color: #f0f3f4;&#13;
}&#13;
&#13;
.action-btn {&#13;
  margin-right: 5px;&#13;
}&#13;
&#13;
.timeline-container {&#13;
   max-height: 50vh;&#13;
   height: 100%;&#13;
   overflow-y: auto;&#13;
}&#13;
&#13;
/*.panel .panel {&#13;
    height: auto !important;&#13;
}*/&#13;
&#13;
.attachment-button {&#13;
  .glyphicon-paperclip {&#13;
    font-size: 18px;&#13;
  }&#13;
}&#13;
&#13;
.panel-heading {&#13;
  background-color: #343D47;&#13;
  color: #fff;&#13;
  height: 52px;&#13;
  border : 1px;&#13;
  padding-top:15px;&#13;
}&#13;
&#13;
.empty-state-wrapper {&#13;
  width: 100%;&#13;
  height: 100%;&#13;
  align-items: center;&#13;
  display: flex;&#13;
  flex-direction: column;&#13;
  padding: 10vh 20px 20px;&#13;
&#13;
  .empty-state {&#13;
    border: 1px solid #e7e9eb;&#13;
    border-radius: 10px;&#13;
    max-width: 700px;&#13;
    padding: 30px 40px 20px;&#13;
    position: relative;&#13;
&#13;
    .empty-state-badge {&#13;
      top: -36px;&#13;
      left: 50%;&#13;
      position: absolute;&#13;
      height: 72px;&#13;
      width: 72px;&#13;
      -webkit-align-items: center;&#13;
      -ms-flex-align: center;&#13;
      align-items: center;&#13;
      border-radius: 100%;&#13;
      color: #ffffff;&#13;
      display: -webkit-flex;&#13;
      display: -ms-flexbox;&#13;
      display: flex;&#13;
      font-size: 40px;&#13;
      -webkit-justify-content: center;&#13;
      -ms-flex-pack: center;&#13;
      justify-content: center;&#13;
      margin-left: -36px;&#13;
      text-align: center;&#13;
    }&#13;
&#13;
    .empty-state-header {&#13;
      font-size: 30px;&#13;
      text-align: center;&#13;
      color: #343d47;&#13;
    }&#13;
&#13;
    .empty-state-content {&#13;
      ul {&#13;
        list-style: disc outside;&#13;
        margin: 0 0 10px 0;&#13;
        padding: 0 0 0 30px;&#13;
      }&#13;
    }&#13;
  }&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>cloud-widget-form</id>
        <internal>false</internal>
        <link><![CDATA[function(scope,el, attrs, ctrl) {

}]]></link>
        <name>Cloud Form</name>
        <option_schema>[{"name":"disableUIActions","label":"Disable UI Actions on Form","type":"boolean"},{"name":"showFormView","label":"Display current form view","type":"boolean"},{"name":"omitHeaderOptions","label":"Omit header options icon","type":"boolean"}]</option_schema>
        <public>false</public>
        <roles>snc_external,snc_internal</roles>
        <script><![CDATA[(function() {
	
	data.page_id = $sp.getParameter('id');
	data.user = gs.getUserID();
	data.table = options.table || input.table; 
	data.sys_id = options.sys_id || input.sys_id;
	data.view = options.view || input.view;

	data.attachmentUploadSuccessMsg = gs.getMessage("Attachment upload was successful");
	data.recordAddedMsg = gs.getMessage("Record Added");
	data.updatedMsg = gs.getMessage("updated_uppercase");
	data.exportPDFMsg = gs.getMessage("Export to PDF");
	data.exportPDFLandMsg = gs.getMessage("Export to PDF (landscape)");
	data.addAttachmentMsg = gs.getMessage("Add an attachment");
	var myUserObject = gs.getUser();
	data.isAdmin = myUserObject.hasRole('admin');
	data.emptyStateTemplate = options.empty_state_template;
	data.disableUIActions = options.disableUIActions || input.disableUIActions || false;
	data.hideRelatedLists = options.hideRelatedLists || input.hideRelatedLists || false;

	data.query = $sp.getParameter("query") || options.query || '';

	data.f = {};
	if (!data.table)
		return;

	var gr = new GlideRecord(data.table);
	if(!gr.isValid())
		return;


	if (!data.sys_id)
		return;

	gr.addQuery('sys_id',data.sys_id);
	gr.query();

	if(gr.next())
		data.isValid = gr.isValidRecord() || data.sys_id == "-1";
	if (!data.isValid)
		return;

	data.canWrite = gr.canWrite();
	data.canDelete = gr.canDelete();
	data.canAttach = data.canWrite && gs.hasRole(gs.getProperty('glide.attachment.role')) && !gr.getAttribute("no_attachment") ;//!GlideTableDescriptor.get(data.table).getED().getBooleanAttribute("no_attachment");

	data.f = $sp.getForm(data.table, data.sys_id, data.query, data.view);

	for (var field in data.f._fields){
		data.f._fields[field].readonly = true;
	}

	// Activity formatter is hardcoded to set specific options
	for (var f in data.f._formatters) {
		var fm = data.f._formatters[f];
		if (fm.formatter == "activity.xml") {
			fm.hardcoded = true;
			fm.widgetInstance = $sp.getWidget('widget-ticket-conversation',
																				{table: data.table,
																				 sys_id: data.sys_id,
																				 includeExtended: true,
																				 title: "${Activity}",
																				 placeholder: "${Add a comment}",
																				 btnLabel: "${Post}"});
		} else {
			//fm.widgetInstance = $sp.getWidget(fm.widget, data);
		}
	}

	if(input && input.action == "download"){
		var key = new sn_cmp_api.SSHKeyPairScript();
		data.decrypted_key = key.decryptAndDeleteSSHKey(data.f._fields.name.displayValue);
	}


	if (input && input.action == "deleteRecord") {
		var delete_key = new GlideRecordSecure('sn_cmp_ssh_credentials');
		delete_key.addQuery('sys_id',data.sys_id);
		delete_key.query(); 
		if (delete_key.next()) { 
			delete_key.deleteRecord();
		}
	}

	if (input && input.action == "cancelOrder") {
		var cancelTask = new GlideRecordSecure('sc_task');
		cancelTask.addQuery('sys_id',data.sys_id);
		cancelTask.query(); 
		if (cancelTask.next()) { 
			cancelTask.state = '4';
			cancelTask.update();
		}
	}

	if (input && input.action == "retry") {
		var retryTask = new GlideRecordSecure('sc_task');
		retryTask.addQuery('sys_id',data.sys_id);
		retryTask.query(); 
		if (retryTask.next()) { 
			retryTask.state = '3';
			retryTask.update();
			data.ritm = retryTask.getValue('request_item');
		}
	}
	
	if (input && input.action == "askForHelp") {
		var askForHelp = new GlideRecordSecure('sc_task');
		askForHelp.addQuery('sys_id',data.sys_id);
		askForHelp.query();
		if (askForHelp.next()) {
			askForHelp.state = '7';
			askForHelp.update();
			data.ritm = askForHelp.getValue('request_item');
		}
	}

})($sp, input, data, options, gs);]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-12-08 09:59:01</sys_created_on>
        <sys_id>a4ef7ebd67e322007f4eff5617415ad5</sys_id>
        <sys_mod_count>269</sys_mod_count>
        <sys_name>Cloud Form</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sp_widget_a4ef7ebd67e322007f4eff5617415ad5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-07-16 23:09:04</sys_updated_on>
        <template><![CDATA[<div ng-if="!data.isValid && !data.emptyStateTemplate" class="panel panel-default">
  <div class="panel-body wrapper-lg text-center">
    ${Record not found}
  </div>
</div>

<div ng-if="!data.isValid && data.emptyStateTemplate" class="panel-shift">
  <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
</div>

<div ng-if="data.isValid" class="panel-shift">
  <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && data.emptyStateTemplate">
    <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
  </div>

  <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && !data.emptyStateTemplate">
    <div class="panel panel-default">
      <div class="panel-heading"><span class="panel-title">{{data.f.title}}</span> <span ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span></div>
      <div class="panel-body wrapper-lg text-center">
        ${No elements to display}
      </div>
    </div>
  </div>

  <div class="panel panel-default" ng-if="data.f._view.length || !data.hideRelatedLists" >
    <div class="panel-heading" ng-if="data.f.title.length"><!-- sp-context-menu="getUIActionContextMenu(event)"-->
      <span class="dropdown m-r-xs" ng-if="(data.isAdmin || getUIActions('context').length > 0) && options.omitHeaderOptions != 'true'">
        <span ng-if="!options.showBack" class="dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="adminMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"></span>
      </span>
      <span class="panel-title">{{data.f.title}}</span> <span ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span>
      <div ng-if="attachmentHandler && data.canAttach && data.table != 'sn_cmp_ssh_credentials'" title="{{::data.addAttachmentMsg}}" class="pull-right attachment-button">
        <sp-attachment-button></sp-attachment-button>
      </div>
    </div>
    <div resize class="panel-body" ng-style="data.page_id == 'cap_activities' ? resizeWithOffset(291) : resizeWithOffset(383)">
      <!-- erformance debug -->
      <div ng-if="data.show_sql">
        <div class="comment">
          <span ng-if="data.f._perf.sql_count">${SQL Statements {{data.f._perf.sql_count}}}, </span>
          <span>${Time {{data.f._perf.time}}}</span>
        </div>
        <div ng-repeat="s in data.f._perf.sql" class="{{s.type}}">
          {{s.statement}}
        </div>
      </div>
      <!-- attachments -->
      <sp-attachment-manager table="data.table" sys-id="data.f._attachmentGUID" omit-edit="!data.canAttach"></sp-attachment-manager>
      <!-- form -->
      <div id="form-body">
        <sp-model form_model="data.f" mandatory="mandatory"></sp-model>
      </div>
      <!-- UI Action Links -->
      <div ng-if="getUIActions('link').length > 0">
        <label style="margin: 0;">${Related Links}</label>
        <div ng-repeat="action in getUIActions('link')">
          <a href ng-click="triggerUIAction(action)">{{action.name}}</a>
        </div>
      </div>
      <!-- related lists -->
      <div ng-if="!data.hideRelatedLists">
        <label style="margin: 0">${Related Lists}</label>
        <div style="margin-bottom: 7px; padding-bottom: 7px; border-bottom: 1px solid #f5f5f5;">
          <span ng-repeat="rl in data.f._related_lists" ng-if="rl.visible">
            <a ng-if="rl.type != 'REL'" href="?id=lf&table={{rl.table}}&filter={{rl.field}}%3D{{data.f.sys_id}}&view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{rl.table}}', filter: '{{rl.field}}%3D{{data.f.sys_id}}'})">{{rl.plural}}
              <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
            </a>
            <a ng-if="rl.type == 'REL'" href="?id=lf&table={{rl.table}}&relationship_id={{rl.relationship_id}}&apply_to={{rl.apply_to}}&apply_to_sys_id={{rl.apply_to_sys_id}}&view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{rl.table}}', apply_to: '{{rl.apply_to}}', apply_to_sys_id: '{{rl.apply_to_sys_id}}', relationship_id: '{{rl.relationship_id}}'})">{{rl.label}}
              <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
            </a>
            <span ng-if="!$last" style="padding-left: .5em; padding-right: .5em;"> | </span>
          </span>
        </div>
      </div>
    </div>
    <div class="panel-footer">
      <button ng-class="{'no-show' : data.disableUIActions}" type="submit" ng-mousedown="triggerUIAction(getPrimaryAction())" class="btn btn-primary action-btn pull-right">${Save} <span ng-if="saveButtonSuffix">(${{{saveButtonSuffix}}})</span></button>
      <button ng-if="data.table == 'sn_cmp_ssh_credentials' && data.canDelete" class="btn btn-default action-btn" ng-click="deleteRecord()">${Delete}</button>
      <button ng-if="data.table == 'sn_cmp_ssh_credentials' && data.f._fields.ssh_private_key.value" class="btn btn-default action-btn" ng-click="download()">${Download}</button> 
      <button ng-if="data.table == 'sc_task'" class="btn btn-default action-btn" ng-click="retry()" ng-disabled="data.f._fields.state.value == '3' || data.f._fields.state.value == '4' || data.f._fields.state.value == '7'">${Retry}</button>
      <button ng-if="data.page_id != 'cap_activities' && data.table == 'sc_task'" class="btn btn-default action-btn" ng-click="askForHelp()" ng-disabled="data.f._fields.state.value == '3' || data.f._fields.state.value == '4' || data.f._fields.state.value == '7'">${Ask For Help}</button>
      <button ng-if="data.table == 'sc_task'" class="btn btn-default action-btn" ng-click="cancelOrder()" ng-disabled="data.f._fields.state.value == '3' || data.f._fields.state.value == '4' || data.f._fields.state.value == '7'">${Cancel Order}</button>
      <div style="clear: both;"></div>
    </div>
  </div>
</div>]]></template>
    </sp_widget>
</record_update>
