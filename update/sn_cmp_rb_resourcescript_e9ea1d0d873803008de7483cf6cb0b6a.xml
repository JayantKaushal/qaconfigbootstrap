<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Azure_Assign_Tag_Policy</name>
        <resource display_value="Azure Datacenter">ddf5cd6bd722220097eb6ccf6e610346</resource>
        <script>function processResponse(response, cloudServiceAccountId, ldc, &#13;
						  correlationId, step, requestorContext, stackId) {&#13;
	var rps = new sn_cmp_api.ResponseProcessorScript();&#13;
	var responseToProcess = rps.extractResponse(response);&#13;
	var responseObject = global.JSON.parse(responseToProcess);	&#13;
	&#13;
	var error = responseObject.error;&#13;
	if (error) {&#13;
		var statusMessageSummary = gs.getMessage("Error assigning tag policy to resource group");&#13;
		var errorMessage = error + '';
		var statusMessageDetails = gs.getMessage('{0}', errorMessage);&#13;
		createCloudTrail(statusMessageSummary,statusMessageDetails, stackId);&#13;
	}&#13;
	&#13;
	return '[]';&#13;
 }&#13;
&#13;
function createCloudTrail(statusMessageSummary,statusMessageDetails, stackId) {&#13;
	var trailer = new sn_cmp_api.CloudTrailServiceScript();&#13;
	var message = {};&#13;
	message.statusMessageSummary = statusMessageSummary;&#13;
	message.statusMessageDetails = statusMessageDetails;&#13;
	message.messageType = '3'; //Warn&#13;
	message.milestone = false;&#13;
	message.step = 'Handle Cloud API Response';&#13;
	message.orderId = fetchOrderId(stackId);&#13;
	var trailMessage = global.JSON.stringify(message);&#13;
	trailer.createTrail(trailMessage);			&#13;
}&#13;
&#13;
function fetchOrderId(stackId) {&#13;
	var orderGr = new GlideRecord('sn_cmp_order');&#13;
	orderGr.addQuery('stack.sys_id', stackId);&#13;
	orderGr.query();&#13;
&#13;
	if (orderGr.next())&#13;
		return '' + orderGr.sys_id;&#13;
&#13;
	return '';&#13;
}&#13;
		</script>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId, ldc, 
						  correlationId, step, requestorContext, stackId) {
	var rps = new sn_cmp_api.ResponseProcessorScript();
	var responseToProcess = rps.extractResponse(response);
	var responseObject = global.JSON.parse(responseToProcess);	
	
	var error = responseObject.error;
	if (error) {
		var statusMessageSummary = gs.getMessage("Error assigning tag policy to resource group");
		var errorMessage = error + '';
		var statusMessageDetails = gs.getMessage('{0}', errorMessage);
		createCloudTrail(statusMessageSummary,statusMessageDetails, stackId);
	}
	
	return '[]';
 }

function createCloudTrail(statusMessageSummary,statusMessageDetails, stackId) {
	var trailer = new sn_cmp_api.CloudTrailServiceScript();
	var message = {};
	message.statusMessageSummary = statusMessageSummary;
	message.statusMessageDetails = statusMessageDetails;
	message.messageType = '3'; //Warn
	message.milestone = false;
	message.step = 'Handle Cloud API Response';
	message.orderId = fetchOrderId(stackId);
	var trailMessage = global.JSON.stringify(message);
	trailer.createTrail(trailMessage);			
}

function fetchOrderId(stackId) {
	var orderGr = new GlideRecord('sn_cmp_order');
	orderGr.addQuery('stack.sys_id', stackId);
	orderGr.query();

	if (orderGr.next())
		return '' + orderGr.sys_id;

	return '';
}
		]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-08-23 18:24:21</sys_created_on>
        <sys_id>e9ea1d0d873803008de7483cf6cb0b6a</sys_id>
        <sys_mod_count>10</sys_mod_count>
        <sys_name>Azure_Assign_Tag_Policy</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_e9ea1d0d873803008de7483cf6cb0b6a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-16 16:31:18</sys_updated_on>
        <type>7</type>
    </sn_cmp_rb_resourcescript>
</record_update>
