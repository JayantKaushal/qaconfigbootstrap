<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_cmp_quota_association</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Floting Point Check</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

  var type=current.getValue("quota_definition");
  var group = current.getValue("group");
  var maxLimit = current.getValue("max_limit");	
  var userLimit = current.getValue("user_limit");
	
  var glideDefinition = new GlideRecord("sn_cmp_quota_definition");
	glideDefinition.addQuery("sys_id",type);
     glideDefinition.query();
  if(glideDefinition.next()){
	var defType = glideDefinition.getValue("name");
    if(defType != "StorageVolume_Size"){            // Check for floating point value	
		  if (maxLimit.toString().indexOf('.') != -1){
	      current.setAbortAction(true);
          gs.addErrorMessage(gs.getMessage("Please do not set decimal values"));
		  }  	
	      if (userLimit.toString().indexOf('.') != -1){
	          current.setAbortAction(true);
              gs.addErrorMessage(gs.getMessage("Please do not set decimal values"));
	      }
    }
	  if(parseInt(maxLimit) < 0 || parseInt(userLimit) < 0 ){    // Check for -ve values
			 current.setAbortAction(true);
             gs.addErrorMessage(gs.getMessage("Please do not set negative values")); 
      }
	  if(parseInt(maxLimit) < parseInt(userLimit)){    // MaxLimit Check
			 current.setAbortAction(true);
             gs.addErrorMessage(gs.getMessage("Group Maximum Limit should be greater than or equal to PerUser Limit ")); 
      }
	  // Check for special characters
	  if(!maxLimit.match(/^[\d]+$/)){
		  current.setAbortAction(true);
             gs.addErrorMessage(gs.getMessage("Only numbers are allowed with Group Max Limit"));  
	  }
	  if(!userLimit.match(/^[\d]+$/)){
		  current.setAbortAction(true);
             gs.addErrorMessage(gs.getMessage("Only numbers are allowed with Per User Limit"));  
	  }
		  
  }	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-01-03 12:49:12</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>e67f91160b003200e586a2c563673ab6</sys_id>
        <sys_mod_count>45</sys_mod_count>
        <sys_name>Floting Point Check</sys_name>
        <sys_overrides/>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_e67f91160b003200e586a2c563673ab6</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-02-13 17:59:54</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=e67f91160b003200e586a2c563673ab6"/>
</record_update>
