<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>sn_cmp.CMPCreateBlueprintFormAction</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>CMPCreateBlueprintFormAction</name>
        <script><![CDATA[var CMPCreateBlueprintFormAction = Class.create();
CMPCreateBlueprintFormAction.prototype = Object.extendsObject(sn_smd.SMBaseAction, {
	doAction: function(params) {
		
		try {
			
			var blueprintID = params.blueprintId;
			var stageOperationID = params.stageOperationId;
			var bpStageOpName = '';
			var newFormBehaviorName = params.name;
			
			var bpStageOpGR = new GlideRecord('sn_cmp_bp_stage_op');
			if (bpStageOpGR.get(stageOperationID))
				bpStageOpName = bpStageOpGR.getValue('name');
			
			//Catalog of type 'Provision' should be unique
			var provCatGR = new GlideRecord('sn_cmp_bp_cat_item');
			provCatGR.addQuery('name', newFormBehaviorName);
			provCatGR.query();
			if (provCatGR.next()) {
				var blueprintServiceHelper = new BlueprintServiceHelper();
			    throw sn_smd.SMErrorHelper.createScriptAPIError(
					gs.getMessage("Catalog with a similar name already exists in '{0}' blueprint for '{1}' operation", [provCatGR.getDisplayValue('blue_print'), blueprintServiceHelper.getStageResourceByCatItemName(newFormBehaviorName)]),
					"CMPCreateBlueprintFormAction.doAction: Catalog with a similar name already exists for 'Provision' operation",
					null);
			}
			//Checking if there exists form behaviour associated to the stage operation
			var formBehaviourGR = new GlideRecord('sn_cmp_bp_form_behavior');
			formBehaviourGR.addQuery('stage_operation', stageOperationID);
			formBehaviourGR.addQuery('cat_item_association.name', newFormBehaviorName);
			formBehaviourGR.query();
			if (formBehaviourGR.getRowCount() > 0)
			    throw sn_smd.SMErrorHelper.createScriptAPIError(
					gs.getMessage("Blueprint form with a similar name already exists for {0} operation",bpStageOpName),
					"CMPCreateBlueprintFormAction.doAction: Blueprint form with a similar name already exists for '"+bpStageOpName+"' operation",
					null);

			var formGR = new GlideRecord('sn_cmp_bp_form_behavior');
			formGR.setValue('alias_name', newFormBehaviorName);
			formGR.setValue("bp_association", blueprintID);
			formGR.setValue("stage_operation", stageOperationID);

			var formSysId = formGR.insert();

			//generate entites for form
			var generateEntitiesHelper = new CMPGenerateBlueprintEntitiesAction();
			generateEntitiesHelper.generateEntities(formGR);

			var blueprintSCItem =  new BlueprintSCItemCreator();
			//calling the existing method for creating the cat item
			blueprintSCItem.createCatItem(formGR, 'createCatalogFromUI');
			return true;

		}
		catch (error) {
			throw sn_smd.SMErrorHelper.createScriptAPIError(gs.getMessage("Failed to create the blueprint form."),
				"CMPCreateBlueprintFormAction.doAction: Failed to create blueprint form", error );
		}
	},

	type: 'CMPCreateBlueprintFormAction'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-04-21 06:18:59</sys_created_on>
        <sys_id>267190050b5e32003bace58525673a99</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>CMPCreateBlueprintFormAction</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_include_267190050b5e32003bace58525673a99</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-06-18 01:28:22</sys_updated_on>
    </sys_script_include>
</record_update>
