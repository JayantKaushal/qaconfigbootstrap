<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_cmp_rb_resourcescript</collection>
        <condition/>
        <description>Restricts Insert and update operations if there exists response processor with same name already associated to a existing resource</description>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Unique Resource Script</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {

	var currentTransName = current.name;
	var currentTransType = current.getValue('type');
	var currentAssocResource = current.getValue('resource');
	var currentSysID = current.getValue('sys_id');
	var currentOperation = current.operation();
	
	var gr = new GlideRecord('sn_cmp_rb_resourcescript');
	gr.addQuery('name', currentTransName);
	gr.addQuery('resource', currentAssocResource);
	gr.query();
	
	if(gr.next()){
		if( currentOperation == 'insert' || (currentOperation == 'update' && currentSysID != gr.getValue('sys_id')) ){
			current.setAbortAction(true);
			var resourceGR = new GlideRecord('sn_cmp_rb_resourceblock');
			if(resourceGR.isValid() && resourceGR.get(currentAssocResource)) {
				var errorMessage = gs.getMessage('Resource Script with name : {0}  already exists for resource : {1}', [currentTransName, resourceGR.getValue('name')]);
				gs.addErrorMessage(errorMessage);
			}
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-12-23 20:15:58</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2ea5c25867130300eccf6c706785ef0b</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Unique Resource Script</sys_name>
        <sys_overrides/>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_2ea5c25867130300eccf6c706785ef0b</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-04-20 12:56:10</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=2ea5c25867130300eccf6c706785ef0b"/>
</record_update>
