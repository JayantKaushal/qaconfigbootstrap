<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>sn_cmp_order</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="sn_cmp_order">owner_table=sn_cmp_azure_alert_configuration^statusIN7,8^EQ<item endquery="false" field="owner_table" goto="false" newquery="false" operator="=" or="false" value="sn_cmp_azure_alert_configuration"/>
            <item endquery="false" field="status" goto="false" newquery="false" operator="IN" or="false" value="7,8"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update azure alert configuration</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var status = current.getDisplayValue('status');
	var alertConfigurationGr = new GlideRecord('sn_cmp_azure_alert_configuration');
	var alertConfigurationId = current.owner_instance + '';
	if (alertConfigurationId && alertConfigurationGr.get(alertConfigurationId)) {
		var operation = current.getValue('operation_name');
		if (operation == 'Event Interface.CreateAlertRules') {
			alertConfigurationGr.status = status == 'Completed'?'activated':'error';
			alertConfigurationGr.setWorkflow(false);
			alertConfigurationGr.update();
		}			
						
		else if(operation == 'Event Interface.DeleteAlertRules') {
			if (alertConfigurationGr.getValue('status') == 'deleting') {
				alertConfigurationGr.status = status == 'Completed'?'deleted':'error';
				alertConfigurationGr.setWorkflow(false);
				alertConfigurationGr.update();
			}				
		}		
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-02-07 21:22:53</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b191d7e5d7b0320097eb6ccf6e6103b5</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Update azure alert configuration</sys_name>
        <sys_overrides/>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sys_script_b191d7e5d7b0320097eb6ccf6e6103b5</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-04-20 22:27:20</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b191d7e5d7b0320097eb6ccf6e6103b5"/>
</record_update>
