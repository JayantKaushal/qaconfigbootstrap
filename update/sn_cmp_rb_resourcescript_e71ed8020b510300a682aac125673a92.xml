<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Discover_Ansible_Project</name>
        <resource display_value="Ansible Tower">d31e50020b510300a682aac125673aae</resource>
        <script/>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId, ldc) {
	var AnsibleModelString = [];
	var discoveryResponse =global.JSON.parse(response);
	
	var respIndex =0;
	var tableName = "";
		
	//projects
	var projectResponse = discoveryResponse.projects;
	for(respIndex = 0, proj_size = projectResponse.length; respIndex < proj_size ; respIndex++){
		
		var hostingTables = [];
		
		//hosting table = organization for project
// 		var projectHostingTable = {};
// 		projectHostingTable.name = "sn_cfg_ansible_organization";
// 		projectHostingTable.identifier = "object_id";
// 		projectHostingTable.identifierValue = projectResponse[respIndex].organization_id.toString();
// 		hostingTables.push(projectHostingTable);
		
		//hosting table = ansible tower for organization
		var orgHostingTable = {};
		orgHostingTable.name = "sn_cfg_ansible_tower";
		orgHostingTable.identifier = "object_id";
		orgHostingTable.identifierValue = discoveryResponse.objectId;
		hostingTables.push(orgHostingTable);
		
		
		tableName = "sn_cfg_ansible_project";
		var projectTable  = new BuildTableData(tableName, projectResponse[respIndex].id, discoveryResponse.towerUrl, hostingTables);
		
		//add attributes for the table
		projectTable[tableName].attributes.id = projectResponse[respIndex].id;
		projectTable[tableName].attributes.type = projectResponse[respIndex].type;
		projectTable[tableName].attributes.name = projectResponse[respIndex].name;
		projectTable[tableName].attributes.organization_id = projectResponse[respIndex].organization_id;
		projectTable[tableName].attributes.status = projectResponse[respIndex].status;
		projectTable[tableName].attributes.play_books = projectResponse[respIndex].play_books;
		
		AnsibleModelString.push(projectTable);		
	}
	
	
	return global.JSON.stringify(AnsibleModelString);
}


function BuildTableData(tableName, id, towerUrl, hostingTables){
	this[tableName] = {};
	this[tableName].validator = "AnsibleTowerResponseValidator"  ;
	this[tableName].validator_overrides = {};
    this[tableName].identification = {};
	this[tableName].identification [tableName] = {};
    this[tableName].identification[tableName].criterion= {};
	this[tableName].identification[tableName].criterion.object_id = id.toString();
	
	for(var index in hostingTables){
		//attach hosting table identification
		this[tableName].identification[hostingTables[index].name] = buildTableIdentification(hostingTables[index]);
	}
    this[tableName].attributes = {};
	//this[tableName].attributes.towerurl = towerUrl;
}

function buildTableIdentification(hostingTable){
	var identification = {};
	identification[hostingTable.name] = {};
	identification[hostingTable.name].criterion = {};
	identification[hostingTable.name].criterion[hostingTable.identifier] = hostingTable.identifierValue;
	return identification[hostingTable.name];
}]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-09-20 12:51:45</sys_created_on>
        <sys_id>e71ed8020b510300a682aac125673a92</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Discover_Ansible_Project</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_e71ed8020b510300a682aac125673a92</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-09-21 12:09:30</sys_updated_on>
        <type>17</type>
    </sn_cmp_rb_resourcescript>
</record_update>
