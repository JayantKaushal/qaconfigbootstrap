<?xml version="1.0" encoding="UTF-8"?><record_update table="sn_cmp_rb_resourcescript">
    <sn_cmp_rb_resourcescript action="INSERT_OR_UPDATE">
        <name>Attach_VDisk_virtual_server</name>
        <resource display_value="vSphere Datacenter">5cc941360b632200e937c97193673a1a</resource>
        <script>function processResponse(response, cloudServiceAccountId, ldc, correlationId, step, requestorContext) {&#13;
	var cloudModelString = [];&#13;
	var volumeAttachments = global.JSON.parse(response);&#13;
	var stepObj = global.JSON.parse(step);&#13;
	//var endPointId = volumeAttachments.instanceId.concat( "-" , volumeAttachments.volumeId );&#13;
	var endPointId = volumeAttachments.volumeId + '_block_endpoint';&#13;
	var volumeAttachInfo = {&#13;
		"cmdb_ci_vmware_instance": {&#13;
			"validator": "volume_attach_vm",&#13;
			"validator_overrides": { },&#13;
			"identification": {&#13;
				"cmdb_ci_cloud_service_account": {&#13;
					"criterion": {&#13;
						"object_id": cloudServiceAccountId&#13;
					}&#13;
				},&#13;
				"cmdb_ci_vcenter_datacenter": {&#13;
					"criterion": {&#13;
						"object_id": stepObj.ldcObjectId&#13;
					}&#13;
				},&#13;
				"cmdb_ci_vmware_instance": {&#13;
					"criterion": {&#13;
						"object_id": volumeAttachments.instanceId&#13;
						}&#13;
				}&#13;
			},&#13;
			"attributes": {&#13;
				"object_id": volumeAttachments.instanceId,&#13;
				"disks": getDiskCount(volumeAttachments.instanceId)&#13;
			},&#13;
			"bindings":[&#13;
              {&#13;
                "attach_to": {&#13;
                  "used_by": {&#13;
                    "endpoint_ci": "cmdb_ci_endpoint_block",&#13;
                    "endpoint_identification": {&#13;
                      "object_id": endPointId&#13;
                    }&#13;
                  }&#13;
                }&#13;
              }&#13;
		    ]&#13;
		}&#13;
	};&#13;
	// Defensive Code to handle Empty Volumes Info&#13;
    function getDiskCount(instanceId){&#13;
		var disks;&#13;
	    var diskCount = new GlideRecord("cmdb_ci_vmware_instance");&#13;
		diskCount.addQuery('object_id',instanceId);&#13;
	    diskCount.query();&#13;
	if (diskCount.next()){ &#13;
		disks = parseInt(diskCount.getValue("disks"))+1;&#13;
	}&#13;
		return disks;&#13;
	}&#13;
	cloudModelString.push(volumeAttachInfo);&#13;
	return global.JSON.stringify(cloudModelString);&#13;
}</script>
        <script_js><![CDATA[function processResponse(response, cloudServiceAccountId, ldc, correlationId, step, requestorContext) {
	var cloudModelString = [];
	var volumeAttachments = global.JSON.parse(response);
	var stepObj = global.JSON.parse(step);
	//var endPointId = volumeAttachments.instanceId.concat( "-" , volumeAttachments.volumeId );
	var endPointId = volumeAttachments.volumeId + '_block_endpoint';
	var volumeAttachInfo = {
		"cmdb_ci_vmware_instance": {
			"validator": "volume_attach_vm",
			"validator_overrides": { },
			"identification": {
				"cmdb_ci_cloud_service_account": {
					"criterion": {
						"object_id": cloudServiceAccountId
					}
				},
				"cmdb_ci_vcenter_datacenter": {
					"criterion": {
						"object_id": stepObj.ldcObjectId
					}
				},
				"cmdb_ci_vmware_instance": {
					"criterion": {
						"object_id": volumeAttachments.instanceId
						}
				}
			},
			"attributes": {
				"object_id": volumeAttachments.instanceId,
				"disks": getDiskCount(volumeAttachments.instanceId)
			},
			"bindings":[
              {
                "attach_to": {
                  "used_by": {
                    "endpoint_ci": "cmdb_ci_endpoint_block",
                    "endpoint_identification": {
                      "object_id": endPointId
                    }
                  }
                }
              }
		    ]
		}
	};
	// Defensive Code to handle Empty Volumes Info
    function getDiskCount(instanceId){
		var disks;
	    var diskCount = new GlideRecord("cmdb_ci_vmware_instance");
		diskCount.addQuery('object_id',instanceId);
	    diskCount.query();
	if (diskCount.next()){ 
		disks = parseInt(diskCount.getValue("disks"))+1;
	}
		return disks;
	}
	cloudModelString.push(volumeAttachInfo);
	return global.JSON.stringify(cloudModelString);
}]]></script_js>
        <sys_class_name>sn_cmp_rb_resourcescript</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-04-18 12:09:28</sys_created_on>
        <sys_id>fdb502880b123200668daac125673a75</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Attach_VDisk_virtual_server</sys_name>
        <sys_package display_value="Cloud Management Platform" source="sn_cmp">80d50579eb203200979aa5115206fedd</sys_package>
        <sys_policy/>
        <sys_scope display_value="Cloud Management Platform">80d50579eb203200979aa5115206fedd</sys_scope>
        <sys_update_name>sn_cmp_rb_resourcescript_fdb502880b123200668daac125673a75</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-09-06 12:20:44</sys_updated_on>
        <type>7</type>
    </sn_cmp_rb_resourcescript>
</record_update>
